name: Deploy to S3 and CloudFront

on:
  push:
    branches:
      - main  # or your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper caching

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Removing cache option to avoid lock file issue
          # cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # change to your region

      - name: Deploy to S3
        run: |
          aws s3 sync ./.next/static s3://${{ secrets.S3_BUCKET_NAME }}/_next/static/ --cache-control "public,max-age=31536000,immutable"
          aws s3 sync ./out s3://${{ secrets.S3_BUCKET_NAME }} --delete
          
      - name: Configure S3 website routing
        run: |
          # Configure S3 bucket for static website hosting with proper error handling
          aws s3 website s3://${{ secrets.S3_BUCKET_NAME }} --index-document index.html --error-document index.html

      - name: Invalidate CloudFront
        if: success()
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
